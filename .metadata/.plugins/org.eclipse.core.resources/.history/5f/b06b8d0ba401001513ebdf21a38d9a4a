package Geometria;
import java.awt.*;

public class Poligono {
	Point[] vertices;
	
	{
		
		
		vertices = new Point[12];
		
		for(int i=0 ; i<12 ; i++ ){
			vertices[i] = new Point();
		}
		
		vertices[0].setLocation(528,820);
		vertices[1].setLocation(540,840);
		vertices[2].setLocation(594,840);
		vertices[3].setLocation(612,874);
		vertices[4].setLocation(636,874);
		vertices[5].setLocation(658,918);
		vertices[6].setLocation(700,921);
		vertices[7].setLocation(716,955);
		vertices[8].setLocation(680,1016);
		vertices[9].setLocation(694,1042);
		vertices[10].setLocation(572,1043);
		vertices[11].setLocation(488,898);
		
	}
	
	
	public boolean dentroPolig(Point p){
		
		int i, j;
		boolean c = false;
		
		  for (i = 0, j = vertices.length-1; i < vertices.length; j = i++) {
		    if ( ((vertices[i].getY() > p.getY()) != (vertices[j].getY() > p.getY() )) &&
			 (p.getX() < (vertices[j].getX() - vertices[i].getX()) * (p.getY() -vertices[i].getY()) / (vertices[j].getY()-vertices[i].getY()) + vertices[i].getX()) )
		       c = !c;
		  }
		  
		  return c;
	}

}
